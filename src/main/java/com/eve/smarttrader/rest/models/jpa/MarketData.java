package com.eve.smarttrader.rest.models.jpa;

// Generated 28 avr. 2013 21:59:35 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * MarketData generated by hbm2java
 */
@Entity
@Table(name = "marketdata", catalog = "eve", uniqueConstraints = @UniqueConstraint(columnNames = { "region", "item_typeID" }))
public class MarketData implements java.io.Serializable {

    private static final long serialVersionUID = 1L;
    private Long id;
    private Date generatedAt;
    private String region;
    private Long itemTypeId;
    private Set<MarketOrder> marketOrders = new HashSet<MarketOrder>(0);

    public MarketData() {
    }

    public MarketData(Date generatedAt, String region, Long itemTypeId, Set<MarketOrder> marketOrders) {
        this.generatedAt = generatedAt;
        this.region = region;
        this.itemTypeId = itemTypeId;
        this.marketOrders = marketOrders;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "generatedAt", length = 19)
    public Date getGeneratedAt() {
        return this.generatedAt;
    }

    public void setGeneratedAt(Date generatedAt) {
        this.generatedAt = generatedAt;
    }

    @Column(name = "region")
    public String getRegion() {
        return this.region;
    }

    public void setRegion(String region) {
        this.region = region;
    }

    @Column(name = "item_typeID")
    public Long getItemTypeId() {
        return this.itemTypeId;
    }

    public void setItemTypeId(Long itemTypeId) {
        this.itemTypeId = itemTypeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "marketData")
    @OrderBy("bid,price")
    public Set<MarketOrder> getMarketOrders() {
        return this.marketOrders;
    }

    public void setMarketOrders(Set<MarketOrder> marketOrders) {
        this.marketOrders = marketOrders;
    }

}
